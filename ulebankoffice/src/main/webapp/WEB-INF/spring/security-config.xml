<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
	

	<!-- Enable the method security to use the @PreAuthorize, @PreFilter, @PostAuthorize 
		and @PostFilter annotations in methods and secure it. -->
<!-- 	<global-method-security pre-post-annotations="enabled" /> -->

	<http pattern="/offersconsulting*/**" auto-config="false"
		use-expressions="true" access-denied-page="/e/403" 
		authentication-manager-ref="authenticationManager">
		<intercept-url pattern="/consuLogin" access="permitAll" />
		<intercept-url pattern="/consuLogout" access="permitAll" />
		<intercept-url pattern="/offersconsulting" access="isAuthenticated()" />
		<intercept-url pattern="/offersconsulting/*" access="isAuthenticated()" />

		<form-login login-page="/consuLogin" default-target-url="/offersconsulting"
			authentication-failure-url="/consuLogin?login_error=yfsb" />
<!-- 		<logout logout-url="/consuLogout" logout-success-url="/" /> -->
	</http>

	<!-- secure the applicationÂ´s urls with the specific Role -->
	<http auto-config="false" use-expressions="true"
		access-denied-page="/e/403" 
		authentication-manager-ref="authenticationManager">
		<intercept-url pattern="/o/login" access="permitAll" />
		<intercept-url pattern="/o/logout" access="permitAll" />
		<intercept-url pattern="/o/admin" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/o/admin/*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/_ah/admin*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/o" access="hasAnyRole('ROLE_ADMIN','ROLE_EMPLEADO','ROLE_SUPERVISOR')" />
		<intercept-url pattern="/o/**" access="hasAnyRole('ROLE_ADMIN','ROLE_EMPLEADO','ROLE_SUPERVISOR')" />

		<form-login login-page="/o/login" default-target-url="/o"
			authentication-failure-url="/o/login?login_error=yfsb" />
		<logout logout-url="/o/logout" logout-success-url="/" />
	</http>

	<beans:bean id="bcrypt"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</beans:bean>
	
	
	<beans:bean class="es.unileon.ulebankoffice.security.MongoUserDetailsService" id="mongoUserDetailsService"/>	
	<beans:bean class="es.unileon.ulebankoffice.security.EmailAdvisorUserDetailsService" id="emailAdvisorUserDetailsService"/>
	
	
<!-- 		<authentication-manager id="authenticationAdvisorManager"> -->
<!-- 		<authentication-provider user-service-ref="emailAdvisorUserDetailsService"> -->
<!-- 			<password-encoder hash="plaintext" /> -->
<!-- 		</authentication-provider> -->
<!-- 	</authentication-manager>  -->
	
	<!-- Define the application authentication manager to use a custom Class 
		(mongoUserDetailsService) to validate the user access, and the password enconding -->
	<authentication-manager id="authenticationManager">
		<authentication-provider user-service-ref="mongoUserDetailsService">
			<password-encoder ref="bcrypt" />
		</authentication-provider>	
			<authentication-provider user-service-ref="emailAdvisorUserDetailsService">
			<password-encoder hash="plaintext" />
		</authentication-provider>
	</authentication-manager>
	
	
	</beans:beans>